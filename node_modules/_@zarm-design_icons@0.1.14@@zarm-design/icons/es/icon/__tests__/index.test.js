import _extends from "@babel/runtime/helpers/extends";
import React from 'react';
import { render } from '@testing-library/react';
import Icon from '../index';
import * as ReactIcon from '../../react';
describe('Icon', function () {
  it('renders all Icons', function () {
    var wrapper = render( /*#__PURE__*/React.createElement(React.Fragment, null, Object.keys(ReactIcon).map(function (item, index) {
      return /*#__PURE__*/React.createElement(ReactIcon[item], {
        key: +index
      });
    })));
    expect(wrapper.asFragment()).toMatchSnapshot();
  });
  it('renders Icons of different theme correctly', function () {
    var wrapper = render( /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ReactIcon.ArrowDown, null), /*#__PURE__*/React.createElement(ReactIcon.ArrowDown, {
      theme: "primary"
    }), /*#__PURE__*/React.createElement(ReactIcon.ArrowDown, {
      theme: "success"
    }), /*#__PURE__*/React.createElement(ReactIcon.ArrowDown, {
      theme: "warning"
    }), /*#__PURE__*/React.createElement(ReactIcon.ArrowDown, {
      theme: "danger"
    })));
    expect(wrapper.asFragment()).toMatchSnapshot();
  });
  it('renders Icons of different size correctly', function () {
    var wrapper = render( /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ReactIcon.ArrowDown, {
      size: "lg"
    }), /*#__PURE__*/React.createElement(ReactIcon.ArrowDown, null), /*#__PURE__*/React.createElement(ReactIcon.ArrowDown, {
      size: "sm"
    })));
    expect(wrapper.asFragment()).toMatchSnapshot();
  });
  it('renders Icons using iconfont', function () {
    var MyIcon = Icon.createFromIconfont('//lf1-cdn-tos.bytegoofy.com/obj/iconpark/svg_20337_14.627ee457cf7594fbbce6d5e14b8c29ef.js');
    var wrapper = render( /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MyIcon, {
      type: "home"
    }), /*#__PURE__*/React.createElement(MyIcon, {
      type: "user"
    })));
    expect(wrapper.asFragment()).toMatchSnapshot();
  });
  it('renders Icons using svg component', function () {
    var svg = function svg(props) {
      return /*#__PURE__*/React.createElement("svg", _extends({
        viewBox: "0 0 32 24",
        fill: "currentColor",
        stroke: "currentColor",
        width: "1em",
        height: "1em"
      }, props), /*#__PURE__*/React.createElement("path", {
        d: "M1 12.376l8.8 9.114L30.431 1.568",
        stroke: "currentColor",
        strokeWidth: 2.6,
        fill: "none"
      }));
    };

    var wrapper = render( /*#__PURE__*/React.createElement(Icon, {
      size: "lg",
      theme: "primary",
      component: svg
    }));
    expect(wrapper.asFragment()).toMatchSnapshot();
  });
  it('renders Icons of custom classname', function () {
    var wrapper = render( /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ReactIcon.ArrowDown, null), /*#__PURE__*/React.createElement(ReactIcon.ArrowDown, {
      className: "custom-arrow-down"
    })));
    expect(wrapper.asFragment()).toMatchSnapshot();
  });
});