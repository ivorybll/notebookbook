import _extends from "@babel/runtime/helpers/extends";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import { createBEM } from '@zarm-design/bem';
import { paramCase } from 'change-case';
import * as React from 'react';
import { IconContext } from '../context';
import createFromIconfont from './IconFont';
var Icon = /*#__PURE__*/React.forwardRef(function (props, ref) {
  var _ref;

  var className = props.className,
      theme = props.theme,
      size = props.size,
      children = props.children,
      SvgComponent = props.component,
      viewBox = props.viewBox,
      mode = props.mode,
      _props$name = props.name,
      name = _props$name === void 0 ? '' : _props$name,
      rest = _objectWithoutProperties(props, ["className", "theme", "size", "children", "component", "viewBox", "mode", "name"]);

  var _React$useContext = React.useContext(IconContext),
      _React$useContext$pre = _React$useContext.prefixCls,
      prefixCls = _React$useContext$pre === void 0 ? 'za' : _React$useContext$pre;

  var bem = createBEM('icon', {
    prefixCls: prefixCls
  });
  var decamelizeName = paramCase(name).replace('svg-', '');
  var iconClassName = bem(decamelizeName);
  var isFont = mode === 'auto' && typeof SVGRect === 'undefined' && typeof window !== 'undefined' || mode === 'font';
  var cls = bem([(_ref = {}, _defineProperty(_ref, "".concat(theme), !!theme), _defineProperty(_ref, "".concat(size), !!size), _defineProperty(_ref, "font", isFont), _ref), className, isFont && iconClassName]);
  var svgProps = {
    width: '1em',
    height: '1em',
    fill: 'currentColor',
    viewBox: viewBox
  }; // iconfont > svg component > children by iconfont

  if (isFont) {
    return /*#__PURE__*/React.createElement("i", _extends({
      ref: ref,
      className: cls
    }, rest));
  }

  if (SvgComponent) {
    return /*#__PURE__*/React.createElement("i", _extends({
      ref: ref,
      className: cls
    }, rest), /*#__PURE__*/React.createElement(SvgComponent, svgProps, children));
  }

  if (children) {
    return /*#__PURE__*/React.createElement("i", _extends({
      ref: ref,
      className: cls
    }, rest), /*#__PURE__*/React.createElement("svg", svgProps, children));
  }

  return null;
});
Icon.createFromIconfont = createFromIconfont;
Icon.displayName = 'Icon';
Icon.defaultProps = {
  viewBox: '0 0 1000 1000',
  mode: 'auto'
};
export default Icon;