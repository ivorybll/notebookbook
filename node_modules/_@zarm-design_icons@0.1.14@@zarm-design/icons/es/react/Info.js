import _defineProperty from "@babel/runtime/helpers/defineProperty";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import * as React from 'react';
import Icon from '../icon';

var SvgInfo = function SvgInfo(props, svgRef) {
  var newProps = _objectSpread(_objectSpread({}, props), {}, {
    name: 'SvgInfo'
  });

  return /*#__PURE__*/React.createElement(Icon, _objectSpread(_objectSpread({}, newProps), {}, {
    component: function component() {
      return /*#__PURE__*/React.createElement("svg", {
        width: "1em",
        height: "1em",
        viewBox: "0 0 1000 1000",
        fill: "currentColor",
        focusable: false,
        "aria-hidden": "true",
        ref: svgRef
      }, /*#__PURE__*/React.createElement("path", {
        d: "M444.455 818.474c-.183 8.206 5.676 14.86 14.278 14.86h82.534c8.069 0 14.47-6.24 14.278-14.86l-11.753-525.836c-.183-8.207-7.153-14.86-14.685-14.86h-58.214c-7.927 0-14.492 6.239-14.685 14.86l-11.753 525.836zM500 111.11c-30.682 0-55.556 24.873-55.556 55.556 0 30.682 24.874 55.555 55.556 55.555s55.556-24.873 55.556-55.555c0-30.683-24.874-55.556-55.556-55.556z",
        fillRule: "evenodd"
      }));
    }
  }));
};

var ForwardRef = /*#__PURE__*/React.forwardRef(SvgInfo);
export default ForwardRef;