"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _bem = require("@zarm-design/bem");

var _changeCase = require("change-case");

var React = _interopRequireWildcard(require("react"));

var _context = require("../context");

var _IconFont = _interopRequireDefault(require("./IconFont"));

var Icon = /*#__PURE__*/React.forwardRef(function (props, ref) {
  var _ref;

  var className = props.className,
      theme = props.theme,
      size = props.size,
      children = props.children,
      SvgComponent = props.component,
      viewBox = props.viewBox,
      mode = props.mode,
      _props$name = props.name,
      name = _props$name === void 0 ? '' : _props$name,
      rest = (0, _objectWithoutProperties2["default"])(props, ["className", "theme", "size", "children", "component", "viewBox", "mode", "name"]);

  var _React$useContext = React.useContext(_context.IconContext),
      _React$useContext$pre = _React$useContext.prefixCls,
      prefixCls = _React$useContext$pre === void 0 ? 'za' : _React$useContext$pre;

  var bem = (0, _bem.createBEM)('icon', {
    prefixCls: prefixCls
  });
  var decamelizeName = (0, _changeCase.paramCase)(name).replace('svg-', '');
  var iconClassName = bem(decamelizeName);
  var isFont = mode === 'auto' && typeof SVGRect === 'undefined' && typeof window !== 'undefined' || mode === 'font';
  var cls = bem([(_ref = {}, (0, _defineProperty2["default"])(_ref, "".concat(theme), !!theme), (0, _defineProperty2["default"])(_ref, "".concat(size), !!size), (0, _defineProperty2["default"])(_ref, "font", isFont), _ref), className, isFont && iconClassName]);
  var svgProps = {
    width: '1em',
    height: '1em',
    fill: 'currentColor',
    viewBox: viewBox
  }; // iconfont > svg component > children by iconfont

  if (isFont) {
    return /*#__PURE__*/React.createElement("i", (0, _extends2["default"])({
      ref: ref,
      className: cls
    }, rest));
  }

  if (SvgComponent) {
    return /*#__PURE__*/React.createElement("i", (0, _extends2["default"])({
      ref: ref,
      className: cls
    }, rest), /*#__PURE__*/React.createElement(SvgComponent, svgProps, children));
  }

  if (children) {
    return /*#__PURE__*/React.createElement("i", (0, _extends2["default"])({
      ref: ref,
      className: cls
    }, rest), /*#__PURE__*/React.createElement("svg", svgProps, children));
  }

  return null;
});
Icon.createFromIconfont = _IconFont["default"];
Icon.displayName = 'Icon';
Icon.defaultProps = {
  viewBox: '0 0 1000 1000',
  mode: 'auto'
};
var _default = Icon;
exports["default"] = _default;